1699598311
waR3U4bTeM%3A16be00b56d621522ccc26f8cc9c84d1d-4879262aa8aecd00594111d1cd3f7e8d
s:26428:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjQ4NzkyNjJhYThhZWNkMDA1OTQxMTFkMWNkM2Y3ZThkIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTM6IkNvYmVydHVyYS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo1NzoidmVuZG9yL3BocHVuaXQvcGhwLWNvZGUtY292ZXJhZ2Uvc3JjL1JlcG9ydC9Db2JlcnR1cmEucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxMjcyMToiPD9waHAgZGVjbGFyZShzdHJpY3RfdHlwZXM9MSk7Ci8qCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHBocHVuaXQvcGhwLWNvZGUtY292ZXJhZ2UuCiAqCiAqIChjKSBTZWJhc3RpYW4gQmVyZ21hbm4gPHNlYmFzdGlhbkBwaHB1bml0LmRlPgogKgogKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4KICovCm5hbWVzcGFjZSBTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0OwoKdXNlIGZ1bmN0aW9uIGNvdW50Owp1c2UgZnVuY3Rpb24gZGlybmFtZTsKdXNlIGZ1bmN0aW9uIGZpbGVfcHV0X2NvbnRlbnRzOwp1c2UgZnVuY3Rpb24gcmFuZ2U7CnVzZSBmdW5jdGlvbiB0aW1lOwp1c2UgRE9NSW1wbGVtZW50YXRpb247CnVzZSBTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcQ29kZUNvdmVyYWdlOwp1c2UgU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXERyaXZlclxXcml0ZU9wZXJhdGlvbkZhaWxlZEV4Y2VwdGlvbjsKdXNlIFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxOb2RlXEZpbGU7CnVzZSBTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcVXRpbFxGaWxlc3lzdGVtOwoKZmluYWwgY2xhc3MgQ29iZXJ0dXJhCnsKICAgIC8qKgogICAgICogQHRocm93cyBXcml0ZU9wZXJhdGlvbkZhaWxlZEV4Y2VwdGlvbgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gcHJvY2VzcyhDb2RlQ292ZXJhZ2UgJGNvdmVyYWdlLCA/c3RyaW5nICR0YXJnZXQgPSBudWxsKTogc3RyaW5nCiAgICB7CiAgICAgICAgJHRpbWUgPSAoc3RyaW5nKSB0aW1lKCk7CgogICAgICAgICRyZXBvcnQgPSAkY292ZXJhZ2UtPmdldFJlcG9ydCgpOwoKICAgICAgICAkaW1wbGVtZW50YXRpb24gPSBuZXcgRE9NSW1wbGVtZW50YXRpb247CgogICAgICAgICRkb2N1bWVudFR5cGUgPSAkaW1wbGVtZW50YXRpb24tPmNyZWF0ZURvY3VtZW50VHlwZSgKICAgICAgICAgICAgJ2NvdmVyYWdlJywKICAgICAgICAgICAgJycsCiAgICAgICAgICAgICdodHRwOi8vY29iZXJ0dXJhLnNvdXJjZWZvcmdlLm5ldC94bWwvY292ZXJhZ2UtMDQuZHRkJwogICAgICAgICk7CgogICAgICAgICRkb2N1bWVudCAgICAgICAgICAgICAgID0gJGltcGxlbWVudGF0aW9uLT5jcmVhdGVEb2N1bWVudCgnJywgJycsICRkb2N1bWVudFR5cGUpOwogICAgICAgICRkb2N1bWVudC0+eG1sVmVyc2lvbiAgID0gJzEuMCc7CiAgICAgICAgJGRvY3VtZW50LT5lbmNvZGluZyAgICAgPSAnVVRGLTgnOwogICAgICAgICRkb2N1bWVudC0+Zm9ybWF0T3V0cHV0ID0gdHJ1ZTsKCiAgICAgICAgJGNvdmVyYWdlRWxlbWVudCA9ICRkb2N1bWVudC0+Y3JlYXRlRWxlbWVudCgnY292ZXJhZ2UnKTsKCiAgICAgICAgJGxpbmVzVmFsaWQgICA9ICRyZXBvcnQtPm51bWJlck9mRXhlY3V0YWJsZUxpbmVzKCk7CiAgICAgICAgJGxpbmVzQ292ZXJlZCA9ICRyZXBvcnQtPm51bWJlck9mRXhlY3V0ZWRMaW5lcygpOwogICAgICAgICRsaW5lUmF0ZSAgICAgPSAkbGluZXNWYWxpZCA9PT0gMCA/IDAgOiAoJGxpbmVzQ292ZXJlZCAvICRsaW5lc1ZhbGlkKTsKICAgICAgICAkY292ZXJhZ2VFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ2xpbmUtcmF0ZScsIChzdHJpbmcpICRsaW5lUmF0ZSk7CgogICAgICAgICRicmFuY2hlc1ZhbGlkICAgPSAkcmVwb3J0LT5udW1iZXJPZkV4ZWN1dGFibGVCcmFuY2hlcygpOwogICAgICAgICRicmFuY2hlc0NvdmVyZWQgPSAkcmVwb3J0LT5udW1iZXJPZkV4ZWN1dGVkQnJhbmNoZXMoKTsKICAgICAgICAkYnJhbmNoUmF0ZSAgICAgID0gJGJyYW5jaGVzVmFsaWQgPT09IDAgPyAwIDogKCRicmFuY2hlc0NvdmVyZWQgLyAkYnJhbmNoZXNWYWxpZCk7CiAgICAgICAgJGNvdmVyYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCdicmFuY2gtcmF0ZScsIChzdHJpbmcpICRicmFuY2hSYXRlKTsKCiAgICAgICAgJGNvdmVyYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCdsaW5lcy1jb3ZlcmVkJywgKHN0cmluZykgJHJlcG9ydC0+bnVtYmVyT2ZFeGVjdXRlZExpbmVzKCkpOwogICAgICAgICRjb3ZlcmFnZUVsZW1lbnQtPnNldEF0dHJpYnV0ZSgnbGluZXMtdmFsaWQnLCAoc3RyaW5nKSAkcmVwb3J0LT5udW1iZXJPZkV4ZWN1dGFibGVMaW5lcygpKTsKICAgICAgICAkY292ZXJhZ2VFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ2JyYW5jaGVzLWNvdmVyZWQnLCAoc3RyaW5nKSAkcmVwb3J0LT5udW1iZXJPZkV4ZWN1dGVkQnJhbmNoZXMoKSk7CiAgICAgICAgJGNvdmVyYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCdicmFuY2hlcy12YWxpZCcsIChzdHJpbmcpICRyZXBvcnQtPm51bWJlck9mRXhlY3V0YWJsZUJyYW5jaGVzKCkpOwogICAgICAgICRjb3ZlcmFnZUVsZW1lbnQtPnNldEF0dHJpYnV0ZSgnY29tcGxleGl0eScsICcnKTsKICAgICAgICAkY292ZXJhZ2VFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ3ZlcnNpb24nLCAnMC40Jyk7CiAgICAgICAgJGNvdmVyYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCd0aW1lc3RhbXAnLCAkdGltZSk7CgogICAgICAgICRkb2N1bWVudC0+YXBwZW5kQ2hpbGQoJGNvdmVyYWdlRWxlbWVudCk7CgogICAgICAgICRzb3VyY2VzRWxlbWVudCA9ICRkb2N1bWVudC0+Y3JlYXRlRWxlbWVudCgnc291cmNlcycpOwogICAgICAgICRjb3ZlcmFnZUVsZW1lbnQtPmFwcGVuZENoaWxkKCRzb3VyY2VzRWxlbWVudCk7CgogICAgICAgICRzb3VyY2VFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdzb3VyY2UnLCAkcmVwb3J0LT5wYXRoQXNTdHJpbmcoKSk7CiAgICAgICAgJHNvdXJjZXNFbGVtZW50LT5hcHBlbmRDaGlsZCgkc291cmNlRWxlbWVudCk7CgogICAgICAgICRwYWNrYWdlc0VsZW1lbnQgPSAkZG9jdW1lbnQtPmNyZWF0ZUVsZW1lbnQoJ3BhY2thZ2VzJyk7CiAgICAgICAgJGNvdmVyYWdlRWxlbWVudC0+YXBwZW5kQ2hpbGQoJHBhY2thZ2VzRWxlbWVudCk7CgogICAgICAgICRjb21wbGV4aXR5ID0gMDsKCiAgICAgICAgZm9yZWFjaCAoJHJlcG9ydCBhcyAkaXRlbSkgewogICAgICAgICAgICBpZiAoISRpdGVtIGluc3RhbmNlb2YgRmlsZSkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRwYWNrYWdlRWxlbWVudCAgICA9ICRkb2N1bWVudC0+Y3JlYXRlRWxlbWVudCgncGFja2FnZScpOwogICAgICAgICAgICAkcGFja2FnZUNvbXBsZXhpdHkgPSAwOwoKICAgICAgICAgICAgJHBhY2thZ2VFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBzdHJfcmVwbGFjZSgkcmVwb3J0LT5wYXRoQXNTdHJpbmcoKSAuIERJUkVDVE9SWV9TRVBBUkFUT1IsICcnLCAkaXRlbS0+cGF0aEFzU3RyaW5nKCkpKTsKCiAgICAgICAgICAgICRsaW5lc1ZhbGlkICAgPSAkaXRlbS0+bnVtYmVyT2ZFeGVjdXRhYmxlTGluZXMoKTsKICAgICAgICAgICAgJGxpbmVzQ292ZXJlZCA9ICRpdGVtLT5udW1iZXJPZkV4ZWN1dGVkTGluZXMoKTsKICAgICAgICAgICAgJGxpbmVSYXRlICAgICA9ICRsaW5lc1ZhbGlkID09PSAwID8gMCA6ICgkbGluZXNDb3ZlcmVkIC8gJGxpbmVzVmFsaWQpOwoKICAgICAgICAgICAgJHBhY2thZ2VFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ2xpbmUtcmF0ZScsIChzdHJpbmcpICRsaW5lUmF0ZSk7CgogICAgICAgICAgICAkYnJhbmNoZXNWYWxpZCAgID0gJGl0ZW0tPm51bWJlck9mRXhlY3V0YWJsZUJyYW5jaGVzKCk7CiAgICAgICAgICAgICRicmFuY2hlc0NvdmVyZWQgPSAkaXRlbS0+bnVtYmVyT2ZFeGVjdXRlZEJyYW5jaGVzKCk7CiAgICAgICAgICAgICRicmFuY2hSYXRlICAgICAgPSAkYnJhbmNoZXNWYWxpZCA9PT0gMCA/IDAgOiAoJGJyYW5jaGVzQ292ZXJlZCAvICRicmFuY2hlc1ZhbGlkKTsKCiAgICAgICAgICAgICRwYWNrYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCdicmFuY2gtcmF0ZScsIChzdHJpbmcpICRicmFuY2hSYXRlKTsKCiAgICAgICAgICAgICRwYWNrYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCdjb21wbGV4aXR5JywgJycpOwogICAgICAgICAgICAkcGFja2FnZXNFbGVtZW50LT5hcHBlbmRDaGlsZCgkcGFja2FnZUVsZW1lbnQpOwoKICAgICAgICAgICAgJGNsYXNzZXNFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdjbGFzc2VzJyk7CgogICAgICAgICAgICAkcGFja2FnZUVsZW1lbnQtPmFwcGVuZENoaWxkKCRjbGFzc2VzRWxlbWVudCk7CgogICAgICAgICAgICAkY2xhc3NlcyAgICAgID0gJGl0ZW0tPmNsYXNzZXNBbmRUcmFpdHMoKTsKICAgICAgICAgICAgJGNvdmVyYWdlRGF0YSA9ICRpdGVtLT5saW5lQ292ZXJhZ2VEYXRhKCk7CgogICAgICAgICAgICBmb3JlYWNoICgkY2xhc3NlcyBhcyAkY2xhc3NOYW1lID0+ICRjbGFzcykgewogICAgICAgICAgICAgICAgJGNvbXBsZXhpdHkgKz0gJGNsYXNzWydjY24nXTsKICAgICAgICAgICAgICAgICRwYWNrYWdlQ29tcGxleGl0eSArPSAkY2xhc3NbJ2NjbiddOwoKICAgICAgICAgICAgICAgIGlmICghZW1wdHkoJGNsYXNzWydwYWNrYWdlJ11bJ25hbWVzcGFjZSddKSkgewogICAgICAgICAgICAgICAgICAgICRjbGFzc05hbWUgPSAkY2xhc3NbJ3BhY2thZ2UnXVsnbmFtZXNwYWNlJ10gLiAnXFwnIC4gJGNsYXNzTmFtZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkbGluZXNWYWxpZCAgID0gJGNsYXNzWydleGVjdXRhYmxlTGluZXMnXTsKICAgICAgICAgICAgICAgICRsaW5lc0NvdmVyZWQgPSAkY2xhc3NbJ2V4ZWN1dGVkTGluZXMnXTsKICAgICAgICAgICAgICAgICRsaW5lUmF0ZSAgICAgPSAkbGluZXNWYWxpZCA9PT0gMCA/IDAgOiAoJGxpbmVzQ292ZXJlZCAvICRsaW5lc1ZhbGlkKTsKCiAgICAgICAgICAgICAgICAkYnJhbmNoZXNWYWxpZCAgID0gJGNsYXNzWydleGVjdXRhYmxlQnJhbmNoZXMnXTsKICAgICAgICAgICAgICAgICRicmFuY2hlc0NvdmVyZWQgPSAkY2xhc3NbJ2V4ZWN1dGVkQnJhbmNoZXMnXTsKICAgICAgICAgICAgICAgICRicmFuY2hSYXRlICAgICAgPSAkYnJhbmNoZXNWYWxpZCA9PT0gMCA/IDAgOiAoJGJyYW5jaGVzQ292ZXJlZCAvICRicmFuY2hlc1ZhbGlkKTsKCiAgICAgICAgICAgICAgICAkY2xhc3NFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdjbGFzcycpOwoKICAgICAgICAgICAgICAgICRjbGFzc0VsZW1lbnQtPnNldEF0dHJpYnV0ZSgnbmFtZScsICRjbGFzc05hbWUpOwogICAgICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+c2V0QXR0cmlidXRlKCdmaWxlbmFtZScsIHN0cl9yZXBsYWNlKCRyZXBvcnQtPnBhdGhBc1N0cmluZygpIC4gRElSRUNUT1JZX1NFUEFSQVRPUiwgJycsICRpdGVtLT5wYXRoQXNTdHJpbmcoKSkpOwogICAgICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+c2V0QXR0cmlidXRlKCdsaW5lLXJhdGUnLCAoc3RyaW5nKSAkbGluZVJhdGUpOwogICAgICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+c2V0QXR0cmlidXRlKCdicmFuY2gtcmF0ZScsIChzdHJpbmcpICRicmFuY2hSYXRlKTsKICAgICAgICAgICAgICAgICRjbGFzc0VsZW1lbnQtPnNldEF0dHJpYnV0ZSgnY29tcGxleGl0eScsIChzdHJpbmcpICRjbGFzc1snY2NuJ10pOwoKICAgICAgICAgICAgICAgICRjbGFzc2VzRWxlbWVudC0+YXBwZW5kQ2hpbGQoJGNsYXNzRWxlbWVudCk7CgogICAgICAgICAgICAgICAgJG1ldGhvZHNFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdtZXRob2RzJyk7CgogICAgICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+YXBwZW5kQ2hpbGQoJG1ldGhvZHNFbGVtZW50KTsKCiAgICAgICAgICAgICAgICAkY2xhc3NMaW5lc0VsZW1lbnQgPSAkZG9jdW1lbnQtPmNyZWF0ZUVsZW1lbnQoJ2xpbmVzJyk7CgogICAgICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+YXBwZW5kQ2hpbGQoJGNsYXNzTGluZXNFbGVtZW50KTsKCiAgICAgICAgICAgICAgICBmb3JlYWNoICgkY2xhc3NbJ21ldGhvZHMnXSBhcyAkbWV0aG9kTmFtZSA9PiAkbWV0aG9kKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCRtZXRob2RbJ2V4ZWN1dGFibGVMaW5lcyddID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgcHJlZ19tYXRjaCgiL1woKC4qPylcKS8iLCAkbWV0aG9kWydzaWduYXR1cmUnXSwgJHNpZ25hdHVyZSk7CgogICAgICAgICAgICAgICAgICAgICRsaW5lc1ZhbGlkICAgPSAkbWV0aG9kWydleGVjdXRhYmxlTGluZXMnXTsKICAgICAgICAgICAgICAgICAgICAkbGluZXNDb3ZlcmVkID0gJG1ldGhvZFsnZXhlY3V0ZWRMaW5lcyddOwogICAgICAgICAgICAgICAgICAgICRsaW5lUmF0ZSAgICAgPSAkbGluZXNWYWxpZCA9PT0gMCA/IDAgOiAoJGxpbmVzQ292ZXJlZCAvICRsaW5lc1ZhbGlkKTsKCiAgICAgICAgICAgICAgICAgICAgJGJyYW5jaGVzVmFsaWQgICA9ICRtZXRob2RbJ2V4ZWN1dGFibGVCcmFuY2hlcyddOwogICAgICAgICAgICAgICAgICAgICRicmFuY2hlc0NvdmVyZWQgPSAkbWV0aG9kWydleGVjdXRlZEJyYW5jaGVzJ107CiAgICAgICAgICAgICAgICAgICAgJGJyYW5jaFJhdGUgICAgICA9ICRicmFuY2hlc1ZhbGlkID09PSAwID8gMCA6ICgkYnJhbmNoZXNDb3ZlcmVkIC8gJGJyYW5jaGVzVmFsaWQpOwoKICAgICAgICAgICAgICAgICAgICAkbWV0aG9kRWxlbWVudCA9ICRkb2N1bWVudC0+Y3JlYXRlRWxlbWVudCgnbWV0aG9kJyk7CgogICAgICAgICAgICAgICAgICAgICRtZXRob2RFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAkbWV0aG9kTmFtZSk7CiAgICAgICAgICAgICAgICAgICAgJG1ldGhvZEVsZW1lbnQtPnNldEF0dHJpYnV0ZSgnc2lnbmF0dXJlJywgJHNpZ25hdHVyZVsxXSk7CiAgICAgICAgICAgICAgICAgICAgJG1ldGhvZEVsZW1lbnQtPnNldEF0dHJpYnV0ZSgnbGluZS1yYXRlJywgKHN0cmluZykgJGxpbmVSYXRlKTsKICAgICAgICAgICAgICAgICAgICAkbWV0aG9kRWxlbWVudC0+c2V0QXR0cmlidXRlKCdicmFuY2gtcmF0ZScsIChzdHJpbmcpICRicmFuY2hSYXRlKTsKICAgICAgICAgICAgICAgICAgICAkbWV0aG9kRWxlbWVudC0+c2V0QXR0cmlidXRlKCdjb21wbGV4aXR5JywgKHN0cmluZykgJG1ldGhvZFsnY2NuJ10pOwoKICAgICAgICAgICAgICAgICAgICAkbWV0aG9kTGluZXNFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdsaW5lcycpOwoKICAgICAgICAgICAgICAgICAgICAkbWV0aG9kRWxlbWVudC0+YXBwZW5kQ2hpbGQoJG1ldGhvZExpbmVzRWxlbWVudCk7CgogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKHJhbmdlKCRtZXRob2RbJ3N0YXJ0TGluZSddLCAkbWV0aG9kWydlbmRMaW5lJ10pIGFzICRsaW5lKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNzZXQoJGNvdmVyYWdlRGF0YVskbGluZV0pIHx8ICRjb3ZlcmFnZURhdGFbJGxpbmVdID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAkbWV0aG9kTGluZUVsZW1lbnQgPSAkZG9jdW1lbnQtPmNyZWF0ZUVsZW1lbnQoJ2xpbmUnKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICRtZXRob2RMaW5lRWxlbWVudC0+c2V0QXR0cmlidXRlKCdudW1iZXInLCAoc3RyaW5nKSAkbGluZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICRtZXRob2RMaW5lRWxlbWVudC0+c2V0QXR0cmlidXRlKCdoaXRzJywgKHN0cmluZykgY291bnQoJGNvdmVyYWdlRGF0YVskbGluZV0pKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICRtZXRob2RMaW5lc0VsZW1lbnQtPmFwcGVuZENoaWxkKCRtZXRob2RMaW5lRWxlbWVudCk7CgogICAgICAgICAgICAgICAgICAgICAgICAkY2xhc3NMaW5lRWxlbWVudCA9ICRtZXRob2RMaW5lRWxlbWVudC0+Y2xvbmVOb2RlKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAkY2xhc3NMaW5lc0VsZW1lbnQtPmFwcGVuZENoaWxkKCRjbGFzc0xpbmVFbGVtZW50KTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICRtZXRob2RzRWxlbWVudC0+YXBwZW5kQ2hpbGQoJG1ldGhvZEVsZW1lbnQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJHJlcG9ydC0+bnVtYmVyT2ZGdW5jdGlvbnMoKSA9PT0gMCkgewogICAgICAgICAgICAgICAgJHBhY2thZ2VFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ2NvbXBsZXhpdHknLCAoc3RyaW5nKSAkcGFja2FnZUNvbXBsZXhpdHkpOwoKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkZnVuY3Rpb25zQ29tcGxleGl0eSAgICAgID0gMDsKICAgICAgICAgICAgJGZ1bmN0aW9uc0xpbmVzVmFsaWQgICAgICA9IDA7CiAgICAgICAgICAgICRmdW5jdGlvbnNMaW5lc0NvdmVyZWQgICAgPSAwOwogICAgICAgICAgICAkZnVuY3Rpb25zQnJhbmNoZXNWYWxpZCAgID0gMDsKICAgICAgICAgICAgJGZ1bmN0aW9uc0JyYW5jaGVzQ292ZXJlZCA9IDA7CgogICAgICAgICAgICAkY2xhc3NFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdjbGFzcycpOwogICAgICAgICAgICAkY2xhc3NFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBiYXNlbmFtZSgkaXRlbS0+cGF0aEFzU3RyaW5nKCkpKTsKICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+c2V0QXR0cmlidXRlKCdmaWxlbmFtZScsIHN0cl9yZXBsYWNlKCRyZXBvcnQtPnBhdGhBc1N0cmluZygpIC4gRElSRUNUT1JZX1NFUEFSQVRPUiwgJycsICRpdGVtLT5wYXRoQXNTdHJpbmcoKSkpOwoKICAgICAgICAgICAgJG1ldGhvZHNFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdtZXRob2RzJyk7CgogICAgICAgICAgICAkY2xhc3NFbGVtZW50LT5hcHBlbmRDaGlsZCgkbWV0aG9kc0VsZW1lbnQpOwoKICAgICAgICAgICAgJGNsYXNzTGluZXNFbGVtZW50ID0gJGRvY3VtZW50LT5jcmVhdGVFbGVtZW50KCdsaW5lcycpOwoKICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+YXBwZW5kQ2hpbGQoJGNsYXNzTGluZXNFbGVtZW50KTsKCiAgICAgICAgICAgICRmdW5jdGlvbnMgPSAkcmVwb3J0LT5mdW5jdGlvbnMoKTsKCiAgICAgICAgICAgIGZvcmVhY2ggKCRmdW5jdGlvbnMgYXMgJGZ1bmN0aW9uTmFtZSA9PiAkZnVuY3Rpb24pIHsKICAgICAgICAgICAgICAgIGlmICgkZnVuY3Rpb25bJ2V4ZWN1dGFibGVMaW5lcyddID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJGNvbXBsZXhpdHkgKz0gJGZ1bmN0aW9uWydjY24nXTsKICAgICAgICAgICAgICAgICRwYWNrYWdlQ29tcGxleGl0eSArPSAkZnVuY3Rpb25bJ2NjbiddOwogICAgICAgICAgICAgICAgJGZ1bmN0aW9uc0NvbXBsZXhpdHkgKz0gJGZ1bmN0aW9uWydjY24nXTsKCiAgICAgICAgICAgICAgICAkbGluZXNWYWxpZCAgID0gJGZ1bmN0aW9uWydleGVjdXRhYmxlTGluZXMnXTsKICAgICAgICAgICAgICAgICRsaW5lc0NvdmVyZWQgPSAkZnVuY3Rpb25bJ2V4ZWN1dGVkTGluZXMnXTsKICAgICAgICAgICAgICAgICRsaW5lUmF0ZSAgICAgPSAkbGluZXNWYWxpZCA9PT0gMCA/IDAgOiAoJGxpbmVzQ292ZXJlZCAvICRsaW5lc1ZhbGlkKTsKCiAgICAgICAgICAgICAgICAkZnVuY3Rpb25zTGluZXNWYWxpZCArPSAkbGluZXNWYWxpZDsKICAgICAgICAgICAgICAgICRmdW5jdGlvbnNMaW5lc0NvdmVyZWQgKz0gJGxpbmVzQ292ZXJlZDsKCiAgICAgICAgICAgICAgICAkYnJhbmNoZXNWYWxpZCAgID0gJGZ1bmN0aW9uWydleGVjdXRhYmxlQnJhbmNoZXMnXTsKICAgICAgICAgICAgICAgICRicmFuY2hlc0NvdmVyZWQgPSAkZnVuY3Rpb25bJ2V4ZWN1dGVkQnJhbmNoZXMnXTsKICAgICAgICAgICAgICAgICRicmFuY2hSYXRlICAgICAgPSAkYnJhbmNoZXNWYWxpZCA9PT0gMCA/IDAgOiAoJGJyYW5jaGVzQ292ZXJlZCAvICRicmFuY2hlc1ZhbGlkKTsKCiAgICAgICAgICAgICAgICAkZnVuY3Rpb25zQnJhbmNoZXNWYWxpZCArPSAkYnJhbmNoZXNWYWxpZDsKICAgICAgICAgICAgICAgICRmdW5jdGlvbnNCcmFuY2hlc0NvdmVyZWQgKz0gJGJyYW5jaGVzVmFsaWQ7CgogICAgICAgICAgICAgICAgJG1ldGhvZEVsZW1lbnQgPSAkZG9jdW1lbnQtPmNyZWF0ZUVsZW1lbnQoJ21ldGhvZCcpOwoKICAgICAgICAgICAgICAgICRtZXRob2RFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAkZnVuY3Rpb25OYW1lKTsKICAgICAgICAgICAgICAgICRtZXRob2RFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ3NpZ25hdHVyZScsICRmdW5jdGlvblsnc2lnbmF0dXJlJ10pOwogICAgICAgICAgICAgICAgJG1ldGhvZEVsZW1lbnQtPnNldEF0dHJpYnV0ZSgnbGluZS1yYXRlJywgKHN0cmluZykgJGxpbmVSYXRlKTsKICAgICAgICAgICAgICAgICRtZXRob2RFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ2JyYW5jaC1yYXRlJywgKHN0cmluZykgJGJyYW5jaFJhdGUpOwogICAgICAgICAgICAgICAgJG1ldGhvZEVsZW1lbnQtPnNldEF0dHJpYnV0ZSgnY29tcGxleGl0eScsIChzdHJpbmcpICRmdW5jdGlvblsnY2NuJ10pOwoKICAgICAgICAgICAgICAgICRtZXRob2RMaW5lc0VsZW1lbnQgPSAkZG9jdW1lbnQtPmNyZWF0ZUVsZW1lbnQoJ2xpbmVzJyk7CgogICAgICAgICAgICAgICAgJG1ldGhvZEVsZW1lbnQtPmFwcGVuZENoaWxkKCRtZXRob2RMaW5lc0VsZW1lbnQpOwoKICAgICAgICAgICAgICAgIGZvcmVhY2ggKHJhbmdlKCRmdW5jdGlvblsnc3RhcnRMaW5lJ10sICRmdW5jdGlvblsnZW5kTGluZSddKSBhcyAkbGluZSkgewogICAgICAgICAgICAgICAgICAgIGlmICghaXNzZXQoJGNvdmVyYWdlRGF0YVskbGluZV0pIHx8ICRjb3ZlcmFnZURhdGFbJGxpbmVdID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkbWV0aG9kTGluZUVsZW1lbnQgPSAkZG9jdW1lbnQtPmNyZWF0ZUVsZW1lbnQoJ2xpbmUnKTsKCiAgICAgICAgICAgICAgICAgICAgJG1ldGhvZExpbmVFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ251bWJlcicsIChzdHJpbmcpICRsaW5lKTsKICAgICAgICAgICAgICAgICAgICAkbWV0aG9kTGluZUVsZW1lbnQtPnNldEF0dHJpYnV0ZSgnaGl0cycsIChzdHJpbmcpIGNvdW50KCRjb3ZlcmFnZURhdGFbJGxpbmVdKSk7CgogICAgICAgICAgICAgICAgICAgICRtZXRob2RMaW5lc0VsZW1lbnQtPmFwcGVuZENoaWxkKCRtZXRob2RMaW5lRWxlbWVudCk7CgogICAgICAgICAgICAgICAgICAgICRjbGFzc0xpbmVFbGVtZW50ID0gJG1ldGhvZExpbmVFbGVtZW50LT5jbG9uZU5vZGUoKTsKCiAgICAgICAgICAgICAgICAgICAgJGNsYXNzTGluZXNFbGVtZW50LT5hcHBlbmRDaGlsZCgkY2xhc3NMaW5lRWxlbWVudCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJG1ldGhvZHNFbGVtZW50LT5hcHBlbmRDaGlsZCgkbWV0aG9kRWxlbWVudCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRwYWNrYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCdjb21wbGV4aXR5JywgKHN0cmluZykgJHBhY2thZ2VDb21wbGV4aXR5KTsKCiAgICAgICAgICAgIGlmICgkZnVuY3Rpb25zTGluZXNWYWxpZCA9PT0gMCkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRsaW5lUmF0ZSAgID0gJGZ1bmN0aW9uc0xpbmVzQ292ZXJlZCAvICRmdW5jdGlvbnNMaW5lc1ZhbGlkOwogICAgICAgICAgICAkYnJhbmNoUmF0ZSA9ICRmdW5jdGlvbnNCcmFuY2hlc1ZhbGlkID09PSAwID8gMCA6ICgkZnVuY3Rpb25zQnJhbmNoZXNDb3ZlcmVkIC8gJGZ1bmN0aW9uc0JyYW5jaGVzVmFsaWQpOwoKICAgICAgICAgICAgJGNsYXNzRWxlbWVudC0+c2V0QXR0cmlidXRlKCdsaW5lLXJhdGUnLCAoc3RyaW5nKSAkbGluZVJhdGUpOwogICAgICAgICAgICAkY2xhc3NFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ2JyYW5jaC1yYXRlJywgKHN0cmluZykgJGJyYW5jaFJhdGUpOwogICAgICAgICAgICAkY2xhc3NFbGVtZW50LT5zZXRBdHRyaWJ1dGUoJ2NvbXBsZXhpdHknLCAoc3RyaW5nKSAkZnVuY3Rpb25zQ29tcGxleGl0eSk7CgogICAgICAgICAgICAkY2xhc3Nlc0VsZW1lbnQtPmFwcGVuZENoaWxkKCRjbGFzc0VsZW1lbnQpOwogICAgICAgIH0KCiAgICAgICAgJGNvdmVyYWdlRWxlbWVudC0+c2V0QXR0cmlidXRlKCdjb21wbGV4aXR5JywgKHN0cmluZykgJGNvbXBsZXhpdHkpOwoKICAgICAgICAkYnVmZmVyID0gJGRvY3VtZW50LT5zYXZlWE1MKCk7CgogICAgICAgIGlmICgkdGFyZ2V0ICE9PSBudWxsKSB7CiAgICAgICAgICAgIEZpbGVzeXN0ZW06OmNyZWF0ZURpcmVjdG9yeShkaXJuYW1lKCR0YXJnZXQpKTsKCiAgICAgICAgICAgIGlmIChAZmlsZV9wdXRfY29udGVudHMoJHRhcmdldCwgJGJ1ZmZlcikgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgV3JpdGVPcGVyYXRpb25GYWlsZWRFeGNlcHRpb24oJHRhcmdldCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiAkYnVmZmVyOwogICAgfQp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6Mzg6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mzg6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiUmVwb3J0Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6NDg6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XENvYmVydHVyYSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18iOjEzOntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0ODoiXFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnRcQ29iZXJ0dXJhIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6OToiQ29iZXJ0dXJhIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjoxO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwYXJlbnQiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBjb25zdGFudHMiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0aG9kcyI7YToxOntzOjU5OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxDb2JlcnR1cmE6OnByb2Nlc3MoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVGhyb3dzIjozOntzOjc6IgAqAG5hbWUiO3M6NjoidGhyb3dzIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY4OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXERyaXZlclxXcml0ZU9wZXJhdGlvbkZhaWxlZEV4Y2VwdGlvbiI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI5OiJXcml0ZU9wZXJhdGlvbkZhaWxlZEV4Y2VwdGlvbiI7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6Mzc6IlNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnQiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjU6e3M6MTc6IkRPTUltcGxlbWVudGF0aW9uIjtzOjE3OiJET01JbXBsZW1lbnRhdGlvbiI7czoxMjoiQ29kZUNvdmVyYWdlIjtzOjQzOiJTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcQ29kZUNvdmVyYWdlIjtzOjI5OiJXcml0ZU9wZXJhdGlvbkZhaWxlZEV4Y2VwdGlvbiI7czo2NzoiU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXERyaXZlclxXcml0ZU9wZXJhdGlvbkZhaWxlZEV4Y2VwdGlvbiI7czo0OiJGaWxlIjtzOjQwOiJTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcTm9kZVxGaWxlIjtzOjEwOiJGaWxlc3lzdGVtIjtzOjQ2OiJTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcVXRpbFxGaWxlc3lzdGVtIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTk6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XENvYmVydHVyYTo6cHJvY2VzcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NzoicHJvY2VzcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJjb3ZlcmFnZSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ0OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXENvZGVDb3ZlcmFnZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJDb2RlQ292ZXJhZ2UiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NjoidGFyZ2V0IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUiOjE6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUAcmVhbFR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO3M6NDoibnVsbCI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzAyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjMwMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0YWRhdGEiO2E6MDp7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";